{"version":3,"sources":["utils.js","app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["(function () {\n    /**\n     * Check the full width of an element based on it's childs width\n     *\n     * @category ScreenlyApps\n     * @package  WeatherForecast\n     * @author   Original Peter Monte <pmonte@screenly.io>\n     * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n     * @link     https://github.com/wireload\n     * @since    0.0.1\n     */\n    function getInnerWidth (el) {\n        if (!el) {\n            return 0;\n        }\n\n        var width = 0;\n        var children = el.children;\n        if (children.length>0) {\n            for (var i = 0; i < children.length; i++) {\n                width += children[i].offsetWidth;\n            }\n        }\n        else {\n            width = el.offsetWidth;\n        }\n\n        return width;\n    }\n\n\n\n\n    /**\n     * Reduce the size of an element by reducing it's font size\n     *\n     * @category ScreenlyApps\n     * @package  WeatherForecast\n     * @author   Original Peter Monte <pmonte@screenly.io>\n     * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n     * @link     https://github.com/wireload\n     * @since    0.0.1\n     */\n    var scalableFonts = document.querySelectorAll(\".scale-font\");\n    if (scalableFonts.length>0) {\n        for(var i=0; i<scalableFonts.length; i++) {\n            var el = scalableFonts[i];\n            var parent = el.parentElement;\n            var parentWidth = parent.offsetWidth;\n            var style = window.getComputedStyle(el, null).getPropertyValue('font-size');\n            var fontSize = parseFloat(style);\n            while (parentWidth < getInnerWidth(el)) {\n                fontSize-=0.5;\n                el.style.fontSize = fontSize + 'px';\n            }\n        }\n    }\n})();\n","/**\n * This file should hold global script. Use app.utils for utilities.\n *\n * @category ScreenlyApps\n * @package  WeatherForecast\n * @author   Original Peter Monte <pmonte@screenly.io>\n * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n * @link     https://github.com/wireload\n * @since    0.0.1\n */\n(function() {\n    /**\n     * DOM elements\n     *\n     * @category ScreenlyApps\n     * @package  WeatherForecast\n     * @author   Original Peter Monte <pmonte@screenly.io>\n     * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n     * @link     https://github.com/wireload\n     * @since    0.0.1\n     */\n    var html = document.querySelector(\"html\");\n    var clockDom = document.getElementById('footer-clock');\n\n\n    /**\n     * Global vars\n     *\n     * @category ScreenlyApps\n     * @package  WeatherForecast\n     * @author   Original Peter Monte <pmonte@screenly.io>\n     * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n     * @link     https://github.com/wireload\n     * @since    0.0.1\n     */\n    var timezone = html.getAttribute('data-timezone');\n    var sunSpeed = 10*60000; // As in 10 minutes (winter)\n    var sunriseTimeUnix, sunsetTimeUnix;\n    var sunriseTimeConcat, sunriseEndTimeConcat, sunsetTimeConcat, sunsetEndTimeConcat;\n\n\n    /**\n     * We pick up all the server data in HTML tag attributes\n     *\n     * @category ScreenlyApps\n     * @package  WeatherForecast\n     * @author   Original Peter Monte <pmonte@screenly.io>\n     * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n     * @link     https://github.com/wireload\n     * @since    0.0.1\n     */\n    var mmt = moment();\n        mmt.tz(timezone);\n\n\n    /**\n     * After all functions and vars are declared we run init.\n     *\n     * @category ScreenlyApps\n     * @package  WeatherForecast\n     * @author   Original Peter Monte <pmonte@screenly.io>\n     * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n     * @link     https://github.com/wireload\n     * @since    0.0.1\n     */\n    function init () {\n        sunriseTimeUnix = Number(html.getAttribute('data-sunrise'));\n        sunsetTimeUnix  = Number(html.getAttribute('data-sunset'));\n\n        // Sunrise\n        var sunMoment = moment(sunriseTimeUnix*1000);\n        sunMoment.tz(timezone);\n        sunriseTimeConcat = sunMoment.format('Hmm');\n\n        // Sunrise end point\n        sunMoment = moment(sunriseTimeUnix*1000+sunSpeed);\n        sunMoment.tz(timezone);\n        sunriseEndTimeConcat = sunMoment.format('Hmm');\n\n        // Sunset\n        sunMoment = moment(sunsetTimeUnix*1000);\n        sunMoment.tz(timezone);\n        sunsetTimeConcat = sunMoment.format('Hmm');\n\n        // Sunset end point\n        sunMoment = moment(sunsetTimeUnix*1000+sunSpeed);\n        sunMoment.tz(timezone);\n        sunsetEndTimeConcat = sunMoment.format('Hmm');\n\n        sunMoment = null; // Clean it, we're not using it anymore\n\n\n        /**\n         * Run time process for first time\n         *\n         * @category ScreenlyApps\n         * @package  WeatherForecast\n         * @author   Original Peter Monte <pmonte@screenly.io>\n         * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n         * @link     https://github.com/wireload\n         * @since    0.0.1\n         */\n        checkTime();\n\n\n        /**\n         * Start the loop that will be updating everytime\n         *\n         * @category ScreenlyApps\n         * @package  WeatherForecast\n         * @author   Original Peter Monte <pmonte@screenly.io>\n         * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n         * @link     https://github.com/wireload\n         * @since    0.0.1\n         */\n        setInterval(checkTime, 1000);\n    }\n\n\n\n    /**\n     * Checktime\n     * Changes DOM clock time and determines if background needs to be changed in\n     * order to represent the day light, sunset/sunrize or night\n     *\n     * @category ScreenlyApps\n     * @package  WeatherForecast\n     * @author   Original Peter Monte <pmonte@screenly.io>\n     * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n     * @link     https://github.com/wireload\n     * @since    0.0.1\n     */\n    function checkTime () {\n        var mmtTimeConcat = Number(mmt.format('HHmm'));\n\n        /**\n         * Draw DOM clock\n         */\n        clockDom.innerHTML = mmt.format('HH:mm') + '<sup>' + mmt.format('A') + '</sup>';\n\n        /**\n         * Change background image based on time\n         */\n        if (mmtTimeConcat >= sunriseTimeConcat && mmtTimeConcat <= sunriseEndTimeConcat ) {\n            // SUNRISE\n            html.className = 'bg-sunset';\n            return true;\n        }\n        else if (mmtTimeConcat > sunriseEndTimeConcat && mmtTimeConcat < sunsetTimeConcat ) {\n            // FULL DAY\n            html.className = 'bg-day';\n            return true;\n        }\n        else if (mmtTimeConcat >= sunsetTimeConcat && mmtTimeConcat <= sunsetEndTimeConcat ) {\n            // SUNSET\n            html.className = 'bg-sunset';\n            return true;\n        }\n        else {\n            // NONE OF THE ABOVE? IT'S NIGHT\n            html.className = 'bg-night';   \n        }\n    }\n\n\n\n    /**\n     * All done let's init\n     *\n     * @category ScreenlyApps\n     * @package  WeatherForecast\n     * @author   Original Peter Monte <pmonte@screenly.io>\n     * @license  https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html  GPLv2\n     * @link     https://github.com/wireload\n     * @since    0.0.1\n     */\n    init ();\n})();\n"],"sourceRoot":"/source/"}